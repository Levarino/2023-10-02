                                                ## Шпаргалка для запоминания и понимания

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]     # числа = [список]

primes = []  # простые числа = [список]  ## проходя цикл и создав условие if создается список [2, 3, 5, 7, 11, 13]
not_primes = []  # не простые числа = [список]  ## проходя цикл и создав условие else создается список [4, 6, 8, 9, 10, 12, 14, 15]

for number in numbers:              # для числа в числах(список)
    if number == 1:                 # если число равно 1
        continue                    # цикл закончился
    is_prime = True                 # Переменные меняющее своё булевое состояние на противоположное в процессе проверки,
                                    # как is_prime, в кругах разработчиков называются перменными-флагами(flag)
    for i in range(2, number):      # для i в диапозоне (от 2 до этого числа(не включительно)),до конца чисел из списка
        if number % i == 0:         # если число делим на i и оно равно 0
            is_prime = False        # флагу присваиваем логику ложь
            break                   # цикл прерываем и создаем условия операторами if, elif, else
    if is_prime:                    # если флаг is_prime:
        primes.append(number)   # Метод .append() добавляет в конец списка элемент, переданный ему в качестве аргумента
    else:                           # иначе,еще (else), если у нас ни одно из этих условий не выполняется
        not_primes.append(number)# Метод .append() добавляет в конец списка элемент, переданный ему в качестве аргумента

print("Primes:", primes)            # вывод списка простых чисел
print("Not Primes:", not_primes)    # вывод списка не простых чисел